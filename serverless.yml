service: test

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    NODE_ENV: dev
  httpApi:
    authorizers:
      Auth:
        type: request
        functionName: Auth

plugins:
  - serverless-auto-swagger
  - serverless-plugin-typescript
  - serverless-offline

package:
  exclude:
    - config/.env.stg
    - config/.env.pro
  include:
    - config/.env.dev

functions:
  Auth:
    handler: app/handler.authAuthorizer
  get:
    handler: app/handler.get
    events:
      - http:
          path: user
          method: GET
          swaggerTags: ["User"]
          headerParameters:
            authorization:
              required: true,
              type: "string"
              description: "Bearer ....."

  register:
    handler: app/handler.register
    events:
      - http:
          path: user/register
          method: POST
          swaggerTags: ["User"]
          bodyType: "RegisterUserDTO"

  login:
    handler: app/handler.login
    events:
      - http:
          path: auth/login
          method: POST
          swaggerTags: ["Auth"]
          bodyType: "LoginUserDTO"
  forgotpassword:
    handler: app/handler.forgotpassword
    events:
      - http:
          path: auth/forgot-password
          method: POST
          swaggerTags: ["Auth"]
          bodyType: "ForgotPasswordDTO"
  resetpassword:
    handler: app/handler.resetpassword
    events:
      - http:
          path: auth/reset-password
          method: POST
          swaggerTags: ["Auth"]
          bodyType: "ResetPasswordDTO"
  changepassword:
    handler: app/handler.changepassword
    events:
      - http:
          path: auth/change-password
          method: POST
          swaggerTags: ["Auth"]
          bodyType: "ChangeUserPasswordDTO"
          headerParameters:
            authorization:
              required: true,
              type: "string"
              description: "Bearer ....."
          authorizer:
            name: Auth
  updateprofile:
    handler: app/handler.changepassword
    events:
      - http:
          path: user/update-profile
          method: PATCH
          swaggerTags: ["User"]
          bodyType: "UpdateUserDTO"
          headerParameters:
            authorization:
              required: true,
              type: "string"
              description: "Bearer ....."
          authorizer:
            name: Auth
custom:
  autoswagger:
    title: "string"
    apiType: "http"
    generateSwaggerOnDeploy: true
    typefiles: ["./src/types/api-types.d.ts"]
    swaggerFiles: []
    swaggerPath: "swagger"
    schemes: ["http", "https"]
